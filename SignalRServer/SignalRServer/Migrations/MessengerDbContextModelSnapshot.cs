// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SignalRServer.Models;

namespace SignalRServer.Migrations
{
    [DbContext(typeof(MessengerDbContext))]
    partial class MessengerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0");

            modelBuilder.Entity("SignalRServer.DbSchema.Chat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Chats");
                });

            modelBuilder.Entity("SignalRServer.DbSchema.ChatParticipant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ChatroomId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ParticipantId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ChatroomId");

                    b.HasIndex("ParticipantId");

                    b.ToTable("ChatParticipants");
                });

            modelBuilder.Entity("SignalRServer.DbSchema.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Body")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ChatroomId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("SendDate")
                        .HasColumnType("TEXT");

                    b.Property<int?>("SendingUserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ChatroomId");

                    b.HasIndex("SendingUserId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("SignalRServer.DbSchema.MessageReadState", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ParticipantId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ReadDate")
                        .HasColumnType("TEXT");

                    b.Property<int?>("WritenMessageId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ParticipantId");

                    b.HasIndex("WritenMessageId");

                    b.ToTable("MessageReadStates");
                });

            modelBuilder.Entity("SignalRServer.DbSchema.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ConnectionId")
                        .HasColumnType("TEXT");

                    b.Property<string>("NickName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SignalRServer.DbSchema.ChatParticipant", b =>
                {
                    b.HasOne("SignalRServer.DbSchema.Chat", "Chatroom")
                        .WithMany()
                        .HasForeignKey("ChatroomId");

                    b.HasOne("SignalRServer.DbSchema.User", "Participant")
                        .WithMany()
                        .HasForeignKey("ParticipantId");
                });

            modelBuilder.Entity("SignalRServer.DbSchema.Message", b =>
                {
                    b.HasOne("SignalRServer.DbSchema.Chat", "Chatroom")
                        .WithMany()
                        .HasForeignKey("ChatroomId");

                    b.HasOne("SignalRServer.DbSchema.User", "SendingUser")
                        .WithMany()
                        .HasForeignKey("SendingUserId");
                });

            modelBuilder.Entity("SignalRServer.DbSchema.MessageReadState", b =>
                {
                    b.HasOne("SignalRServer.DbSchema.User", "Participant")
                        .WithMany()
                        .HasForeignKey("ParticipantId");

                    b.HasOne("SignalRServer.DbSchema.Message", "WritenMessage")
                        .WithMany()
                        .HasForeignKey("WritenMessageId");
                });
#pragma warning restore 612, 618
        }
    }
}
